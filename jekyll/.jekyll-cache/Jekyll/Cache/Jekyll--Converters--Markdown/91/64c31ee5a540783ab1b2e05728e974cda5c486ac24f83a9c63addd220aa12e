I"ºï<pre style="border: none; padding: 0;">
 __________________________
|\ From: neo        .__.  /|
| \ To: sigint.in   |  | / |
|  \  ._-..         '""'/  |
|  /\__________________/\  |
| /                      \ |
|/               -.,-_    \|
|__________________________|
</pre>

<h2 id="-1---smtp-qu√©-c√≥mo-y-cu√°ndo-">.‚Äì[ 1 - SMTP: Qu√©, c√≥mo y cu√°ndo ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</h2>

<p>El protocolo SMTP saluda al mundo en noviembre del a√±o 1982 con pi√±atas y confetti, en la forma de un RFC titulado ‚ÄúSimple Mail Transfer Protocol‚Äù (Protocolo Simple de Transferencia de Correos)[0]. Como su t√≠tulo lo indica, este documento detalla minuciosamente la implementaci√≥n de un protocolo de comunicaci√≥n que pronto formar√≠a parte del d√≠a a d√≠a de miles de personas, transform√°ndose en un pilar fundamental del internet que hoy conocemos.</p>

<p>La estructura fundamental del protocolo es relativamente sencilla. Existen las siguientes partes en juego:</p>

<pre style="border: none; padding: 0;">
\- Usuario: Quien quiere enviar el correo
\- Cliente SMTP
\- Servidor SMTP

                  +----------+                +----------+
      +------+    |          |                |          |
      | User |&lt;--&gt;|          |      SMTP      |          |
      +------+    |  Client- |Commands/Replies|  Server- |
      +------+    |   SMTP   |&lt;--------------&gt;|   SMTP   |    +------+
      | File |&lt;--&gt;|          |    and Mail    |          |&lt;--&gt;| File |
      |System|    |          |                |          |    |System|
      +------+    +----------+                +----------+    +------+
                   SMTP client                SMTP server
                              Fuente: RFC5321
</pre>

<p>En donde el usuario inicializa un env√≠o a trav√©s del cliente SMTP, quien establece un canal de comunicaci√≥n con el servidor SMTP. A trav√©s de este t√∫nel, el cliente env√≠a comandos -especificando los detalles del correo- y el servidor responde con c√≥digos de estado a cada uno de estos. Uno de estos intercambios se podr√≠a ver algo as√≠:</p>

<pre style="border: none; padding: 0;">
C = Cliente
S = Servidor

    S: 220 sigint.in Simple Mail Transfer Service Ready                  
    C: EHLO demon.cl                                                     
    S: 250-sigint.in greets demon.cl                                     
    C: MAIL FROM:&lt;miku@demon.cl&gt;                                        
    S: 250 OK                                                            
    C: RCPT TO:&lt;neo@kirby.cl&gt;                                          
    S: 250 OK                                                            
    C: DATA                                                              
    S: 354 Start mail input; end with &lt;CRLF&gt;.&lt;CRLF&gt;                      
    C: From: Miku &lt;miku@demon.cl&gt;                                       
    C: Subject: Importante.                                              
    C: To: Neo &lt;neo@kirby.cl&gt;                                          
    C:
    C: Querido Neo:                                            
    C: Olvid√© cu√°ndo ten√≠a que enviarte el correo falso para el blog.    
    C: Quedo atento.                                                     
    C:
    C: - Miku
    C: .                                                                 
    S: 250 OK                                                            
    C: QUIT                                                              
    S: 221 sigint.in Service closing transmission channel                
</pre>

<p>En otras palabras:</p>

<pre style="border: none; padding: 0;">
 ____________________________________________________________________________________
/                                                                                    \
|    .------------------------------------------------------.                        |
|   ( Hola, soy sigint.in. Estoy listo para recibir comandos )                       |
|    '---------------------------------------------.--------'-------------------.    |
|                                                 ( Hola sigint.in, soy demon.cl )   | 
|    .-------------.                               '----------------------------'    |
|   ( Hola demon.cl )                                                                |
|    '------------.'------------------------------------------------------------.    |
|                 ( El usuario que va a *transmitir* el mensaje es miku@demon.cl )   |
|    .---.         '------------------------------------------------------------'    |
|   ( Oki )                                                                          |
|    '---'    .-----------------------------------------------------------------.    |
|            ( El usuario que recibe el mensaje y las respuestas es neo@kirby.cl )   |
|    ,---.    '-----------------------------------------------------------------'    |
|   ( Oki )                                                                          |
|    '---'                         .--------------------------------------------.    |
|                                 ( Ahora te voy a pasar el contenido del correo )   |
|    .------------------ ----.     '--------------------------------------------'    |
|   ( Dele nom√°s, usted avisa )                                                      |
|    '----.------------------'--------------------------------------------------.    |
|        /       El usuario que va a componer el mensaje es Miku (miku@demon.cl) \   |
|        |                                                 Asunto: "Importante." |   |
|        |   Que el receptor vea que el mensaje va dirigido a Neo (neo@kirby.cl) |   |
|        |                                          Mensaje: "Querido Neo:..."   |   |
|        \                                                                 Listo /   |
|    .----'.--------------------------------------------------------------------'    |
|   ( Ok ok )                                                                        |
|    '-----'                                                    .---------------.    |
|                                                              ( Ok chao besitos )   |
|    .----------.                                               '---------------'    |
|   ( Chaooo uwu )                                                                   |
|    '----------'                                                                    |
\____________________________________________________________________________________/
          Chat entre nosotros (demon.cl) y el servidor de correo (sigint.in)
</pre>

<p>Esto dejar√≠a un mensaje a nombre de miku@demon.cl en la cola para neo@kirby.cl.</p>

<p>Muy bonito todo, pero un poco preocupante en realidad. Como mencion√© antes, SMTP es el protocolo que se usa actualmente (2023) para el env√≠o de correos. Un poco extra√±o, considerando que fundamentalmente sigue siendo igual y que SE CRE√ì HACE M√ÅS DE 40 A√ëOS. As√≠ es amigos y amigas, uno de los protocolos que sostiene gran parte de la comunicaci√≥n moderna est√° construido sobre cimientos desactualizados, vulnerables y definitivamente no dise√±ados para el internet del siglo XXI.</p>

<p>Analicemos c√≥mo funciona con m√°s detalle y busquemos los problemas de dise√±o inherentes que viene arrastrando desde hace m√°s de cuatro d√©cadas.</p>

<h2 id="-11---integridad-">.‚Äì[ 1.1 - ¬øIntegridad? ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî</h2>

<p>Dado el contexto en el que naci√≥ SMTP, el dise√±o original no contempla ning√∫n mecansismo para asegurar la integridad del mensaje o para establecer si el remitente de este es genuino realmente.</p>

<p>Para entender esto, veamos c√≥mo es que se transporta la informaci√≥n enviada.</p>

<p>SMTP transporta estructuras llamadas ‚ÄúObjetos de correo‚Äù, compuestass por dos partes: un sobre y contenido. El sobre se configura a trav√©s de una serie de transacciones una vez que se inicia la conexi√≥n, mientras que el contenido se especifica utilizando el comando DATA. En el ejemplo de la parte anterior, el objeto de correo habr√≠a quedado algo as√≠:</p>

<pre style="border: none; padding: 0;">
    .-----------------------------.
    | EHLO demon.cl               |
    | MAIL FROM: &lt;miku@demon.cl&gt;  |      &lt;- Sobre SMTP
    | RCPT TO: &lt;neo@kirby.cl&gt;     |
    |   . ----------------------------.
    |   | FROM: Miku &lt;miku@demon.cl&gt;  |
    '---| TO: Neo &lt;neo@kirby.cl&gt;      |  &lt;- Cabecera del contenido
        | SUBJECT: Importante.        |
        !-----------------------------!
        | Querido Neo:...             |  &lt;- Cuerpo del contenido
        '-----------------------------'
</pre>

<p><strong>[!] El mensaje no se ve realmente as√≠. Estos valores se reflejan en otras cabeceras de distinto nombre.</strong></p>

<p>Si se fijan bien, hay algunos valores que parecen ser redundantes: MAIL FROM/FROM y RCPT TO/TO. Sin embargo, son solo los primeros -aquellos presentes en el sobre- los que realmente importan para el enrutamiento del mensaje. FROM y TO sirven unicamente como feedback visual para el usuario y son los valores que se muestran en los campos ‚ÄúFrom‚Äù y ‚ÄúTo‚Äù (‚ÄúDe‚Äù y ‚ÄúPara‚Äù in spanish). Esto significa que no existe ning√∫n mecanismo que nos obligue a homologar los valores del sobre y el contenido, por lo que es posible ingresar datos arbitrarios y enviar correos a nombre de otros usuarios y dominios.</p>

<p>Para demostrar esto, levant√© un servidor SMTP en uno de los servidores de sigint.in con python (pueden hacer esto localmente pero me gusta complicar todo):</p>

<pre style="border: none; padding: 0;">
    $ python3 -m smtpd -n -c DebuggingServer 0.0.0.0:1337
</pre>

<p>Luego, me conect√© usando telnet y envi√© un correo tal y como describ√≠ en la parte anterior. Sin embargo, reemplac√© los valores de ‚ÄúMAIL FROM‚Äù y ‚ÄúFROM‚Äù por ‚Äúsigint.in@cloudflare.com‚Äù. Esta direcci√≥n de correo no existe y es solo para demostrar que el protocolo no valida estos campos de ninguna forma.</p>

<pre style="border: none; padding: 0;">
    $ telnet sigint.in 1337
    Trying xx.xxx.xx.xx...
    Connected to sigint.in.
    Escape character is '^]'.
    220 localhost Python SMTP proxy version 0.3
    EHLO elmejorblogdelmundo
    250-localhost
    250-8BITMIME
    250 HELP
    MAIL FROM:&lt;sigint.in@cloudflare.com&gt;
    250 OK
    RCPT TO:&lt;neo@sigint.in&gt;
    250 OK
    DATA
    354 End data with &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;
    To: neo@sigint.in
    From: sigint.in@cloudflare.com
    Subject: ¬øIntegridad?

    Creo que no :)
    .
    250 OK
    QUIT
    221 Bye
    Connection closed by foreign host.
</pre>

<p>Volviendo al servidor SMTP, nos damos cuenta de que el correo lleg√≥ exitosamente, junto con el remitente falso.</p>

<pre style="border: none; padding: 0;">
    $ python3 -m smtpd -n -c DebuggingServer 0.0.0.0:1337
    ---------- MESSAGE FOLLOWS ----------
    b'To: neo@sigint.in'
    b'From: sigint.in@cloudflare.com'
    b'Subject: \xc2\xbfIntegridad?'
    b'X-Peer: xxx.xxx.xxx.xxx'
    b''
    b'Creo que no :)'
    ------------ END MESSAGE ------------
</pre>

<p>Los dejo invitados a recrear este experimento y estudiar como se comportan los distintos comandos
del protocolo, junto con las cabeceras que producen posteriormente.</p>

<h2 id="-2---smtp-electric-boogaloo-">.‚Äì[ 2 - SMTP: Electric Boogaloo ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî</h2>

<p>Las d√©cadas han pasado y ahora facebook y los minions son tendencia. As√≠ es, el a√±o es 2023 y SMTP lo sabe. Han habido muchas revisiones al protocolo en el √∫ltimo tiempo (ya vamos en RFC5321!) y est√° cada vez m√°s preparado para los tiempos modernos. Aqu√≠ algunos de los nuevos personajes:</p>

<pre style="border: none; padding: 0;">
\- MUA (Mail User Agent)
| \ Mejor conocido como cliente de correo (Gmail, Thunderbird, Outlook, etc.)
|
\- MTA (Mail Transfer Agent)
| \ Tambi√©n llamado servidor de correo (Microsoft Exchange, Postfix, Sendmail, etc.)
|
\- MDA (Mail Delivery Agent)
| \ Usado por los agentes MTA para entregar el correo al buz√≥n de un usuario
|  \ concreto.
|
\- Muchos m√°s irrelevantes para lo que estamos viendo
</pre>

<p>Simplificando mucho la realidad del proceso, aqu√≠ un peque√±o diagrama que ejemplifica el rol de cada uno de estos nuevos actores:</p>

<pre style="border: none; padding: 0;">
                                        kirby.cl ,-MX-&gt; demon.cl
                                     .----------/.   .-----------.
                                     |         / |   |           |
                   .-----.     SMTP  |  .----./  SMTP|  .-----.  |
          (&gt;'-')&gt;  | MUA |-----------~-&gt;| MTA |--------&gt;| MTA |  |
      kirby@kirby.cl-----'           |  '--.--'  |(2)|  '--.--'  |
                                     |     |     |   |     |     |
                                     |     | (1) |   | (3) |     |
                                     |     |     |   |     |     |
                                     |     v     |   |     v     |
                   .-----.   IMAP/POP|  .-----.  |   |  .-----.  |IMAP/POP   .-----. 
          (&gt;'-')&gt;  | MUA |&lt;----------~--| MDA |  |   |  | MDA |--~----------&gt;| MUA |  &lt;('-'&lt;)
        neo@kirby.cl-----'           |  '-----'  |   |  '-----'  |           '-----miku@demon.cl
                                     '-----------'   '-----------'
</pre>

<p>En primer lugar, el usuario kirby en kirby.cl quiere enviarle correos electr√≥nicos a sus queridos amigos. Por un lado est√° neo, quien tambi√©n est√° en kirby.cl, y por otro est√° miku, presente en demon.cl. Ya que el mensaje es el mismo para ambos, kirby lo redactar√° a trav√©s de su MUA, especificando a sus dos amigos en la cabecera ‚ÄúRCPT TO‚Äù. Los comandos que enviar√° se ver√°n algo as√≠:</p>

<pre style="border: none; padding: 0;">
    HELO kirby.local
    MAIL FROM:&lt;kirby@kirby.cl&gt;
    RCPT TO:"Neo" &lt;neo@kirby.cl&gt;, "Miku" &lt;miku@demon.cl&gt;
    DATA
    From: &lt;kirby@kirby.cl&gt;
    To:"Neo" &lt;neo@kirby.cl&gt;, "Miku" &lt;miku@demon.cl&gt;
    Subject: Mensaje de amor

    Los tkm
    .
    QUIT
</pre>

<p>Ac√°, el MUA de kirby@kirby.cl (Thunderbird porque apoya el software libre) enviar√° los comandos de arriba al MTA de kirby.cl, smtp.kirby.cl en este caso. Este MTA tomar√° 2 caminos distintos, uno para cada usuario:</p>

<p>Para neo@kirby.cl, se dar√° cuenta de que el usuario se encuentra en el mismo dominio, por lo que encolar√° el mensaje en el MDA de kirby.cl (1), desde donde neo@kirby.cl recojer√° el mensaje para visualizarlo a trav√©s de su MUA y recibir todo el amor de su amigo. Por otro lado, el MTA se dar√° cuenta de que miku se encuentra en otro dominio (demon.cl), por lo que el camino ser√° un poco m√°s largo:</p>

<pre style="border: none; padding: 0;">
    0. Har√° una consulta DNS a los registros MX de demon.cl para identificar el MTA correspondiente
    1. Enrutar√° el mensaje hacia ese MTA a trav√©s de SMTP (2)
    2. Eso era todo. No era tan largo en realidad
</pre>

<p>Luego el principio es el mismo. El MTA de demon.cl se dar√° cuenta de que el mensaje va dirigido hacia un usuario de su dominio, por lo que se lo entregar√° al MDA (3) para que miku@demon.cl lo pueda recuperar y visualizar con su MUA de preferencia.</p>

<p>Muy bonito, un aplauso. Me imagino que ya no es posible suplantar identidades y enviar correos con emisores arbitrarios como en la parte anterior, ¬øcorrecto? Si y no, es complejo. A estas alturas, la adopci√≥n del protocolo se ha vuelto tan inmensa que reemplazarlo lamentablemente ya no es una opci√≥n viable. Las soluciones m√°s adoptadas se basan en ‚Äúparches‚Äù que construyen nuevas medidas de seguridad al rededor del ya existente est√°ndar. Veamos cada una de ellas con detalle.</p>

<h2 id="--21---spf-restricci√≥n-de-origen-">.‚Äî-[ 2.1 - SPF: Restricci√≥n de origen ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</h2>

<p>El a√±o es 2014 y luego de 8 a√±os de deliberaci√≥n y debate, SPF (Sender Policy Framework) es finalmente formalizado como est√°ndar de internet en el RFC7208. SPF es el primero de muchos contrincantes que nacen para luchar contra de la falta de autenticaci√≥n intr√≠nseca de SMTP.</p>

<p>El funcionamiento de SPF es relativamente simple:</p>

<pre style="border: none; padding: 0;">
    0. El due√±o de un dominio publica la pol√≠tica SPF en un registro TXT. Este especifica qu√© direcciones IP tienen autorizado enviar correos a nombre del dominio.

    1. Cuando un MTA recibe un correo, este toma el dominio utilizado en la cabecera "Return-Path"* y hace una consulta DNS para obtener su pol√≠tica SPF (previamente definida en el registro TXT).

    2. El MTA receptor verifica si la direcci√≥n IP del MTA emisor del correo est√° en la lista que especifica la pol√≠tica SPF, esto es, si est√° autorizada para enviar correos a nombre del dominio.

    3. Esta evaluaci√≥n puede tener varios resultados, pero en general indica si el correo viene de un servidor leg√≠timo o no.
</pre>

<p>** ¬°La cabecera ‚ÄúReturn-Path‚Äù es el valor indicado con el comando SMTP ‚ÄúMAIL FROM‚Äù!**</p>

<pre style="border: none; padding: 0;">
    .~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.
    (  '.  _  .'      ¬øSab√≠as que SPF originalmente significaba "Sender Permitted From" (Emisor       )
    ( -=  (~)  =-     Permitido Desde)? Seg√∫n yo, este nombre es mucho m√°s obvio y claro que el       )
    (  .'  #  '.      cr√≠ptico "Registro de Marco de Pol√≠ticas del Remitente".                        )
    '~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
</pre>

<p>Ahora veamos cu√°les son las partes que componen a un registro SPF y c√≥mo funcionan.</p>

<h2 id="-211---mecanismos-">.‚Äî‚Äî[ 2.1.1 - Mecanismos ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</h2>

<p>Los mecansimos en los registros SPF definen ‚Äúidentidades‚Äù dentro de la pol√≠tica. Estas identidades pueden hacer referencia a direcci√≥nes IPv4/IPv6, registros DNS del dominio, registros SPF de otros dominios, entre otras cosas. Los mecanismos definidos en el RFC7208 son:</p>

<pre style="border: none; padding: 0;">
.
| Mecanismos B√°sicos
\---+- all
    |  \ Hace match a cualquier direcci√≥n IP.                                                                )
    |   '----------------------------------------------------------------------------------------------------'
    |
    \- include
       \ Hace match si la evaluaci√≥n del registro SPF al que hace referencia resulta en un PASS (es mucho
        \ m√°s complejo pero todo a su tiempo).                                                               )
         '---------------------------------------------------------------------------------------------------'

.
| Mecanismos de Emisor Designado
\---.- a
    |  \ Hace match si el dominio tiene registros A/AAAA que coinciden con la direcci√≥n IP del emisor.
    |   \ Tambi√©n es posible especificar un dominio distinto, de forma que se utilicen sus registros A/AAAA
    |    \ para la validaci√≥n y no los del dominio actual. Ej: a:smtp.sigint.in va a coincidir si la
    |     \ direcci√≥n IP del emisor se encuentra en los registros A o AAAA de smtp.sigint.in.                )
    |      '-------------------------------------------------------------------------------------------------'
    \- mx
    |  \ Hace match si la direcci√≥n IP del emisor corresponde a uno de los servidores de correo del dominio
    |   \ especificados en los registros MX. Tambi√©n es posible especificar un dominio disitinto para que se
    |    \ consulten sus registros MX.                                                                       )
    |     '--------------------------------------------------------------------------------------------------'
    |
    \- ip4/ip6
    |  \ Coincide si la direcci√≥n IP del emisor se encuentra dentro del segmento especificado por el
    |   \ mecanismo. Ej: ip4:13.37.133.7/24, ip6:fd1b:212c:a5f9::/48                                         )
    |    '---------------------------------------------------------------------------------------------------'
    |
    \- exists
       \ Coincide si el dominio especificado tiene un registro A. Ej: exists:kirby.sigint.in.                )
        '----------------------------------------------------------------------------------------------------'
</pre>

<h2 id="-212---calificadores-">.‚Äî‚Äî[ 2.1.2 - Calificadores ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</h2>

<p>Los calificadores indican el resultado que tiene la evaluaci√≥n de un mecanismo. Los calificadores definidos son los siguientes:</p>

<pre style="border: none; padding: 0;">
.---.----------+--.
| + | PASS     | La direcci√≥n IP del emisor est√° autorizada para enviar correos a nombre del dominio
| - | FAIL     | La direcci√≥n IP del emisor NO est√° autorizada para enviar correos a nombre del dominio
| ~ | SOFTFAIL | El due√±o del dominio se amarill√≥ y no dice que PASS pero tampoco que FAIL
| ? | NEUTRAL  | Una cosa media rara entre - y ~. Hay muchas interepretaciones distintas por los MTA
'---'----------+--'
</pre>

<h2 id="-213---modificadores-">.‚Äî‚Äî[ 2.1.3 - Modificadores ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</h2>

<p>No es relevante para esto, pero esta en el RFC si te interesa :)</p>

<h2 id="-214---el-registro-en-s√≠--">.‚Äî‚Äî[ 2.1.4 - El registro en s√≠ ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-</h2>

<p>La sintaxis del registro SPF est√° definida formalmente en el RFC [HOLA], pero nadie sabe leer gram√°ticas libres de contexto as√≠ que este regex de sintaxis inventada basta:</p>

<pre style="border: none; padding: 0;">
    "v=spf1 ((CALIFICADOR)?MECANISMO(:VALOR)?)*"
      ~~.~~   ~~~~~.~~~~~  ~~~~.~~~~  ~~.~~
        |          |           |        '--------&gt; Depende del mecanismo. Puede ser un dominio, bloques CIDR, etc.
        |          |           '-----------------&gt; Un mecanismo jaja. A, MX, IP4, IP6, ...
        |          '-----------------------------&gt; '+', '-', '~', '?'. Es opcional, si no se especifica se asume un '+' impl√≠cito.
        '----------------------------------------&gt; Omaigat esto es nuevo. Es la versi√≥n. Siempre debe ser spf1.
</pre>

<h2 id="-215---evaluaci√≥n-de-una-pol√≠tica--">.‚Äî‚Äî[ 2.1.5 - Evaluaci√≥n de una pol√≠tica ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-</h2>

<p>El algoritmo que eval√∫a la politica SPF de un dominio contra una direcci√≥n IP, llam√©moslo check_spf, es relativamente simple. Podemos visualizarlo con una pseudo-implementaci√≥n b√°sica en python:</p>

<figure class="highlight"><pre><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">re</span>

<span class="n">cal_strings</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"+"</span><span class="p">:</span> <span class="s">"PASS"</span><span class="p">,</span>
    <span class="s">"-"</span><span class="p">:</span> <span class="s">"FAIL"</span><span class="p">,</span>
    <span class="s">"~"</span><span class="p">:</span> <span class="s">"SOFTFAIL"</span><span class="p">,</span>
    <span class="s">"?"</span><span class="p">:</span> <span class="s">"NEUTRAL"</span>
<span class="p">}</span>

<span class="k">def</span> <span class="nf">get_dns_record</span><span class="p">(</span><span class="n">domain</span><span class="p">,</span> <span class="n">record</span><span class="p">):</span>
    <span class="k">pass</span> <span class="c1"># [REDACTED]
</span>
<span class="k">def</span> <span class="nf">matches</span><span class="p">(</span><span class="n">dir_ip</span><span class="p">,</span> <span class="n">mecanismo</span><span class="p">,</span> <span class="n">dominio</span><span class="p">):</span>
    <span class="n">mec</span> <span class="o">=</span> <span class="n">mecanismo</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">mec</span> <span class="o">==</span> <span class="s">"all"</span><span class="p">:</span>
        <span class="k">return</span> <span class="bp">True</span>

    <span class="n">regex</span> <span class="o">=</span> <span class="sa">r</span><span class="s">"(a|mx|ip4|ip6|exists|include)(?::(.*))?"</span>
    <span class="n">mec</span><span class="p">,</span> <span class="n">val</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">regex</span><span class="p">,</span> <span class="n">mecanismo</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>

    <span class="k">if</span> <span class="n">mec</span> <span class="o">==</span> <span class="s">"a"</span><span class="p">:</span>
        <span class="n">a_record</span> <span class="o">=</span> <span class="n">get_dns_record</span><span class="p">(</span><span class="n">val</span> <span class="ow">or</span> <span class="n">dominio</span><span class="p">,</span> <span class="s">"A"</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">dir_ip</span> <span class="o">==</span> <span class="n">a_record</span>
    <span class="k">if</span> <span class="n">mec</span> <span class="o">==</span> <span class="s">"mx"</span><span class="p">:</span>
        <span class="n">mx_records</span> <span class="o">=</span> <span class="n">get_dns_record</span><span class="p">(</span><span class="n">val</span> <span class="ow">or</span> <span class="n">dominio</span><span class="p">,</span> <span class="s">"MX"</span><span class="p">)</span>
        <span class="n">mx_ips</span> <span class="o">=</span> <span class="p">[</span><span class="n">get_dns_record</span><span class="p">(</span><span class="n">host</span><span class="p">,</span> <span class="s">"A"</span><span class="p">)</span> <span class="k">for</span> <span class="n">host</span> <span class="ow">in</span> <span class="n">mx_records</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">dir_ip</span> <span class="ow">in</span> <span class="n">mx_ips</span>
    <span class="k">if</span> <span class="n">mec</span> <span class="ow">in</span> <span class="p">(</span><span class="s">"ip4"</span><span class="p">,</span> <span class="s">"ip6"</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">dir_ip</span> <span class="ow">in</span> <span class="n">expand_hosts</span><span class="p">(</span><span class="n">val</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">mec</span> <span class="o">==</span> <span class="s">"exists"</span><span class="p">:</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">val</span><span class="p">:</span> <span class="k">return</span> <span class="bp">False</span>
        <span class="k">return</span> <span class="n">get_dns_record</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="s">"A"</span><span class="p">)</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span>
    <span class="k">if</span> <span class="n">mec</span> <span class="o">==</span> <span class="s">"include"</span><span class="p">:</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">val</span><span class="p">:</span> <span class="k">return</span> <span class="bp">False</span>
        <span class="n">spf_record</span> <span class="o">=</span> <span class="n">get_dns_record</span><span class="p">(</span><span class="n">val</span><span class="p">,</span> <span class="s">"TXT"</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">check_spf</span><span class="p">(</span><span class="n">spf_record</span><span class="p">,</span> <span class="n">val</span><span class="p">,</span> <span class="n">dir_ip</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">check_spf</span><span class="p">(</span><span class="n">registro_spf</span><span class="p">,</span> <span class="n">dominio</span><span class="p">,</span> <span class="n">dir_ip</span><span class="p">):</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">registro_spf</span><span class="p">:</span> <span class="c1"># No existe un registro SPF
</span>        <span class="k">return</span> <span class="s">"PASS"</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">valid_record</span><span class="p">(</span><span class="n">registro_spf</span><span class="p">):</span> <span class="c1"># No es v√°lido o est√° malformado
</span>        <span class="k">return</span> <span class="s">"PERMERROR"</span>
    <span class="k">for</span> <span class="n">calificador</span><span class="p">,</span> <span class="n">mecanismo</span> <span class="ow">in</span> <span class="n">get_rules</span><span class="p">(</span><span class="n">registro_spf</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">matches</span><span class="p">(</span><span class="n">dir_ip</span><span class="p">,</span> <span class="n">mecanismo</span><span class="p">,</span> <span class="n">dominio</span><span class="p">):</span>
            <span class="k">return</span> <span class="n">cal_strings</span><span class="p">[</span><span class="n">calificador</span><span class="p">]</span>
    <span class="k">return</span> <span class="s">"NEUTRAL"</span></code></pre></figure>

<p>La parte importante del programa es el ciclo for en la funci√≥n check_spf. En palabras humanas, para hacer la validaci√≥n, el servidor itera por cada par calificador-mecanismo, viendo si la direcci√≥n IP del emisor hace match con cada mecanismo</p>

<p>Para entenderlo mejor, desglosemos los registros SPF de dominios reales. Para esto podemos utilizar dig, especificando el registro TXT y +short para que no muestre tanta tontera.</p>

<p>Los mecanismos se evaluan uno por uno, de izquierda a derecha, hasta el primero que haga match. Por lo mismo, iremos paso por paso simulando lo que har√≠a un MTA real al evaluar el registro contra una direcci√≥n IP.</p>

<pre style="border: none; padding: 0;">
    $ dig +short txt fruna.cl
    "v=spf1 mx ip4:201.148.106.125 ~all"
</pre>

<p>Ya que existen calificadores impl√≠citos, el registro es equivalente a:</p>

<pre style="border: none; padding: 0;">
    "v=spf1 +mx +ip4:201.148.106.125/32 ~all"
</pre>

<p>Al ver el mecanismo mx, el servidor har√≠a una consulta DNS a los registros MX de fruna.cl. Nosotros
podemos hacerlo manualmente as√≠:</p>

<pre style="border: none; padding: 0;">
    $ dig +short mx fruna.cl
    20 cloud16.spamtitan.com.
    10 cloud15.spamtitan.com.
</pre>

<p>Luego, har√≠a consultas adicionales para obtener la direcci√≥n IP de los servidores de correo reci√©n
obtenidos:</p>

<pre style="border: none; padding: 0;">
    $ dig +short a cloud15.spamtitan.com
    18.188.207.172
    18.190.56.214
    18.216.101.235

    $ dig +short a cloud16.spamtitan.com
    18.190.56.214
    18.216.101.235
    18.188.207.172
</pre>

<p>Ahora que eso est√° listo, el servidor puede analizar bien el mecanismo ‚Äú+mx‚Äù del registro. Si la direcci√≥n IP del emisor hace match, es decir, corresponde a alguna de las direcciones anteriores, se detiene todo y el resultado de la evaluaci√≥n es PASS (por el calificador +). Por otro lado, si no hace match y la direcci√≥n IP no corresponde a uno de los servidores de correo del dominio, se contin√∫a con la siguiente regla definida, <strong>+ip4:201.148.106.125</strong> en este caso.</p>

<p>El mecanismo <strong>+ip4:201.148.106.125</strong> es para verificar si la direcci√≥n IP del emisor est√° dentro del segmento especificado, 201.148.106.125/32 en este caso particular. Si esto es as√≠, el resultado de la evaluaci√≥n ser√≠a PASS por el calificador ‚Äú+‚Äù.</p>

<p>Para finalizar, independiente de la direcci√≥n IP de origen, el mecanismo ‚Äúall‚Äù har√≠a match siempre y terminar√≠a la evaluaci√≥n como un SOFTFAIL debido al calificador ‚Äú~‚Äù.</p>

<p>Basicamente, este registro SPF establece que las direcciones IP autorizadas (o sea que evaluan como un PASS) son los servidores de correo del dominio fruna.cl y 201.148.106.125. Para cualquier otro origen, la evaluaci√≥n de la pol√≠tica tendr√° como resultado un SOFTFAIL.</p>

<p>Podemos hacer el mismo ejercicio con el dominio pdichile.cl.</p>

<pre style="border: none; padding: 0;">
    $ dig +short txt pdichile.cl
    "v=spf1 +a:mail.pdichile.cl ~all"
</pre>

<p>Ac√°, la √∫nica direcci√≥n IP autorizada para enviar correos a nombre del dominio pdichile.cl es la
direcci√≥n IPv4 de mail.pdichile.cl (163.247.90.21). Cualquier otra direcci√≥n (all) hace que se
eval√∫e un SOFTFAIL (‚Äú~‚Äù).</p>

<p>Y por √∫ltimo, el registro SPF de sre.cl:</p>

<pre style="border: none; padding: 0;">
    $dig +short txt sre.cl
    "v=spf1 a mx a:sre.cl ip4:38.7.201.30 ip6:fe80::216:3cff:fe4f:4a9c ?all"
</pre>

<p>Si bien hay mucha redundancia, estas son las direcciones autorizadas:</p>
<ul>
  <li>a: El registro A de sre.cl (38.7.201.30)</li>
  <li>mx: Direcciones de los registros MX de sre.cl (mail.sre.cl -&gt; 38.7.201.30)</li>
  <li>a:sre.cl: El registro A de sre.cl (38.7.201.30)</li>
  <li>38.7.201.30</li>
  <li>fe80::216:3cff:fe4f:4a9c</li>
</ul>

<p>Y ?all devuelve un NEUTRAL para cualquier otra.</p>

<h2 id="-216---el-gran-problema-">.‚Äî‚Äî[ 2.1.6 - El gran problema ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì</h2>

<p>Obviamente SPF es mejor que nada. Es el primer mecanismo ampliamente adoptado que entrega una m√©trica tangible sobre la integridad de un correo electr√≥nico. A√∫n as√≠, sufre de una falla fundamental que lo hace un poco in√∫til para evitar la suplantaci√≥n de identidad en correos electr√≥nicos.</p>

<p>Primero recordemos que un mensaje SMTP contiene dos campos que indican el emisor del mensaje, uno en el sobre SMTP y el otro en el contenido -MAIL FROM y FROM respectivamente-. Adem√°s, existe el comando HELO/EHLO hecho para que el host se identifique con el servidor de correo.</p>

<p>La falla fundamental de SPF es que solo verifica las identidades presentes en las cabeceras Return-Path y Received, que corresponden a los valores de los comandos MAIL FROM y HELO/EHLO. Estos valores no son directamente visibles para el usuario a menos que revise el mensaje en bruto. Por otro lado, la cabecera FROM, que s√≠ es mostrada al usuario en el MUA como el emisor del mensaje (comunmente representada como ‚ÄúDe: ‚Ä¶‚Äù), no es verificada por SPF por lo que puede contener cualquier valor; de hecho, ni siquiera es obligatoria. Esto en teor√≠a permitir√≠a enviar un correo desde un servidor leg√≠timo, con valores de MAIL FROM y HELO/EHLO reales, pero suplantando la identidad en la cabecera FROM.  De esta forma, se evaluar√≠a el SPF con un PASS, pero el usuario final ver√≠a un emisor falso en su interfaz.</p>

<p>Algo as√≠:</p>

<pre style="border: none; padding: 0;">
    .------------------------------.
    | EHLO real.cl                 |
    | MAIL FROM: &lt;real@real.cl&gt;    |
    | RCPT TO: &lt;neo@kirby.cl&gt;      |
    |   . -----------------------------.
    |   | FROM: Falso &lt;falso@falso.cl&gt; |
    '---| TO: Neo &lt;neo@kirby.cl&gt;       |
        | SUBJECT: Importante.         |
        !------------------------------!
        | Querido Neo:...              |
        '------------------------------'
</pre>

<p>Asumiendo que estamos enviando el correo desde un servidor permitido por el SPF de real.cl. As√≠, SPF pasar√° con un PASS, pero neo@kirby.cl ver√° como emisor a falso@falso.cl.</p>

<h2 id="--22---dkim-firma-digital-">.‚Äî-[ 2.2 - DKIM: Firma digital ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî</h2>

<ul>
  <li>Contexto hist√≥rico y qu√© hace</li>
  <li>C√≥mo se ve, d√≥nde est√° (registros TXT, c√≥mo buscarla con dig, etc.)</li>
  <li>Descripci√≥n detallada (Explicar selectores, mostrar que cabeceras se firman)</li>
  <li>Ejemplos reales</li>
  <li>Por qu√© no es suficiente</li>
  <li>C√≥mo reacciona cada MUA a la pol√≠tica</li>
</ul>

<h2 id="--23---dmarc-uniendo-todo-">.‚Äî-[ 2.3 - DMARC: Uniendo todo ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî</h2>

<ul>
  <li>Contexto hist√≥rico y qu√© hace</li>
  <li>C√≥mo se ve, d√≥nde est√° (registros TXT, c√≥mo buscarla con dig, etc.)</li>
  <li>Descripci√≥n detallada (Explicar las pol√≠ticas none, reject, quarintine)</li>
  <li>Ejemplos reales (stats)</li>
  <li>Por qu√© es suficiente (la mayor√≠a de las veces)</li>
  <li>C√≥mo reacciona cada MUA a la pol√≠tica</li>
</ul>

<h2 id="-3---atacando-dominios-parte-1-">.‚Äì[ 3 - Atacando dominios: Parte 1 ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî</h2>

<ul>
  <li>Recon de registros DNS</li>
  <li>An√°lisis de SPF
  0) Validaci√≥n insuficiente
  1) Pol√≠ticas excesivamente permisivas
  2) Interpretaci√≥n no estandarizada
  3) SPF y los hostings compartidos
  4) Forwarders</li>
  <li>An√°lisis de DMARC</li>
  <li>Explicaci√≥n detallada del problema</li>
  <li>Ejemplos reales</li>
</ul>

<h2 id="-4---atacando-dominios-parte-2-">.‚Äì[ 4 - Atacando dominios: Parte 2 ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî</h2>

<ul>
  <li>Todos los registros est√°n bien, ahora qu√©</li>
  <li>An√°lisis de DKIM y reutilizaci√≥n de firmas</li>
  <li>Email forwarders</li>
  <li>Discrepancias visuales en distintos MUAs</li>
  <li>Ejemplos reales</li>
</ul>

<h2 id="-5---qu√©-podemos-hacer-al-respecto--">.‚Äì[ 5 - ¬øQu√© podemos hacer al respecto? ]‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî-</h2>
<ul>
  <li>Por qu√© est√° todo as√≠</li>
  <li>Concientizaci√≥n</li>
  <li>Ideas??</li>
  <li>Recomendaciones generales</li>
</ul>

<p>[ Referencias ]
[HOLA] https://datatracker.ietf.org/doc/html/rfc7208#section-7.1
[XD] https://www.rfc-editor.org/rfc/rfc5321#section-4.5.3.2.2</p>

:ET